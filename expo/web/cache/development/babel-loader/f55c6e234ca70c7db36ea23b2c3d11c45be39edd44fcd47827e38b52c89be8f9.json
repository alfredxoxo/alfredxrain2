{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { getAuth, signInWithEmailAndPassword } from '@firebase/auth';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginForm = function LoginForm(_ref) {\n  var onRegisterNow = _ref.onRegisterNow;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    errorMessage = _useState6[0],\n    setErrorMessage = _useState6[1];\n  var auth = getAuth();\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var userCredential = yield signInWithEmailAndPassword(auth, email, password);\n        var user = userCredential.user;\n        console.log('User signed in successfully:', user.email);\n      } catch (error) {\n        console.error('Login error:', error);\n        setErrorMessage('Invalid email or password.');\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      autoCapitalize: \"none\"\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(Text, {\n        children: \"Forgot Password\"\n      })\n    }), errorMessage ? _jsx(Text, {\n      style: {\n        color: 'red',\n        marginBottom: 10\n      },\n      children: errorMessage\n    }) : null, _jsx(Button, {\n      title: \"Login\",\n      onPress: handleLogin,\n      color: \"#3498db\"\n    }), _jsx(TouchableOpacity, {\n      onPress: onRegisterNow,\n      children: _jsx(Text, {\n        children: \"Register Now\"\n      })\n    })]\n  });\n};\nexport default LoginForm;","map":{"version":3,"names":["React","useState","Text","TextInput","Button","View","TouchableOpacity","getAuth","signInWithEmailAndPassword","jsx","_jsx","jsxs","_jsxs","LoginForm","_ref","onRegisterNow","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","errorMessage","setErrorMessage","auth","handleLogin","_ref2","_asyncToGenerator","userCredential","user","console","log","error","apply","arguments","children","placeholder","value","onChangeText","autoCapitalize","secureTextEntry","style","color","marginBottom","title","onPress"],"sources":["C:/Users/jpmta/Downloads/Backend-Firebase-FinEase/Firebase_auth/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, TextInput, Button, View, TouchableOpacity } from 'react-native';\r\nimport { getAuth, signInWithEmailAndPassword } from '@firebase/auth';\r\n\r\n\r\n\r\nconst LoginForm = ({ onRegisterNow }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const auth = getAuth();\r\n\r\n\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      const user = userCredential.user;\r\n      console.log('User signed in successfully:', user.email);\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      setErrorMessage('Invalid email or password.');\r\n    }\r\n  };\r\n\r\n    \r\n  return (\r\n    <View>\r\n      <TextInput\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        autoCapitalize=\"none\"\r\n      />\r\n      <TextInput\r\n\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        secureTextEntry\r\n      />\r\n     <TouchableOpacity >\r\n        <Text>Forgot Password</Text>\r\n      </TouchableOpacity> \r\n\r\n      {errorMessage ? <Text style={{ color: 'red', marginBottom: 10 }}>{errorMessage}</Text> : null}\r\n      <Button title=\"Login\" onPress={handleLogin} color=\"#3498db\" />\r\n\r\n\r\n\r\n      <TouchableOpacity onPress={onRegisterNow}>\r\n        <Text>Register Now</Text>\r\n      </TouchableOpacity>\r\n\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAExC,SAASC,OAAO,EAAEC,0BAA0B,QAAQ,gBAAgB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAIrE,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAA0B;EAAA,IAApBC,aAAa,GAAAD,IAAA,CAAbC,aAAa;EAChC,IAAAC,SAAA,GAA0Bf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgCpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAwCxB,QAAQ,CAAC,EAAE,CAAC;IAAAyB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA7CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EAEpC,IAAMG,IAAI,GAAGtB,OAAO,CAAC,CAAC;EAItB,IAAMuB,WAAW;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,IAAI;QACF,IAAMC,cAAc,SAASzB,0BAA0B,CAACqB,IAAI,EAAEV,KAAK,EAAEI,QAAQ,CAAC;QAC9E,IAAMW,IAAI,GAAGD,cAAc,CAACC,IAAI;QAChCC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,IAAI,CAACf,KAAK,CAAC;MACzD,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpCT,eAAe,CAAC,4BAA4B,CAAC;MAC/C;IACF,CAAC;IAAA,gBATKE,WAAWA,CAAA;MAAA,OAAAC,KAAA,CAAAO,KAAA,OAAAC,SAAA;IAAA;EAAA,GAShB;EAGD,OACE3B,KAAA,CAACP,IAAI;IAAAmC,QAAA,GACH9B,IAAA,CAACP,SAAS;MACRsC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEvB,KAAM;MACbwB,YAAY,EAAEvB,QAAS;MACvBwB,cAAc,EAAC;IAAM,CACtB,CAAC,EACFlC,IAAA,CAACP,SAAS;MAERsC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEnB,QAAS;MAChBoB,YAAY,EAAEnB,WAAY;MAC1BqB,eAAe;IAAA,CAChB,CAAC,EACHnC,IAAA,CAACJ,gBAAgB;MAAAkC,QAAA,EACd9B,IAAA,CAACR,IAAI;QAAAsC,QAAA,EAAC;MAAe,CAAM;IAAC,CACZ,CAAC,EAElBb,YAAY,GAAGjB,IAAA,CAACR,IAAI;MAAC4C,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAG,CAAE;MAAAR,QAAA,EAAEb;IAAY,CAAO,CAAC,GAAG,IAAI,EAC7FjB,IAAA,CAACN,MAAM;MAAC6C,KAAK,EAAC,OAAO;MAACC,OAAO,EAAEpB,WAAY;MAACiB,KAAK,EAAC;IAAS,CAAE,CAAC,EAI9DrC,IAAA,CAACJ,gBAAgB;MAAC4C,OAAO,EAAEnC,aAAc;MAAAyB,QAAA,EACvC9B,IAAA,CAACR,IAAI;QAAAsC,QAAA,EAAC;MAAY,CAAM;IAAC,CACT,CAAC;EAAA,CAGf,CAAC;AAEX,CAAC;AAED,eAAe3B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}