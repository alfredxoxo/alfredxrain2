{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { getAuth, sendPasswordResetEmail } from '@firebase/auth';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ForgotPassword = function ForgotPassword() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    resetMessage = _useState4[0],\n    setResetMessage = _useState4[1];\n  var handleResetPassword = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var auth = getAuth();\n        yield sendPasswordResetEmail(auth, email);\n        setResetMessage('Password reset email sent. Please check your inbox.');\n      } catch (error) {\n        console.error('Error sending password reset email:', error.message);\n        setResetMessage('Error sending password reset email. Please try again.');\n      }\n    });\n    return function handleResetPassword() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Forgot Password\"\n    }), _jsx(Text, {\n      children: \" \"\n    }), _jsx(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      autoCapitalize: \"none\"\n    }), _jsx(Button, {\n      title: \"Reset Password\",\n      onPress: handleResetPassword,\n      color: \"#3498db\"\n    }), resetMessage ? _jsx(Text, {\n      children: resetMessage\n    }) : null, _jsx(Text, {\n      children: \" Back to Login Page? \"\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(Text, {\n        children: \"Login Now\"\n      })\n    })]\n  });\n};\nexport default ForgotPassword;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","TouchableOpacity","getAuth","sendPasswordResetEmail","jsx","_jsx","jsxs","_jsxs","ForgotPassword","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","resetMessage","setResetMessage","handleResetPassword","_ref","_asyncToGenerator","auth","error","console","message","apply","arguments","children","placeholder","value","onChangeText","autoCapitalize","title","onPress","color"],"sources":["C:/Users/jpmta/Downloads/Backend-Firebase-FinEase/Firebase_auth/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, TouchableOpacity } from 'react-native';\r\nimport { getAuth, sendPasswordResetEmail } from '@firebase/auth';\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [resetMessage, setResetMessage] = useState('');\r\n \r\n  const handleResetPassword = async () => {\r\n    try {\r\n      const auth = getAuth();\r\n      await sendPasswordResetEmail(auth, email);\r\n      setResetMessage('Password reset email sent. Please check your inbox.');\r\n    } catch (error) {\r\n      console.error('Error sending password reset email:', error.message);\r\n      setResetMessage('Error sending password reset email. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text >Forgot Password</Text>\r\n      <Text > </Text>\r\n      <TextInput\r\n\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        autoCapitalize=\"none\"\r\n      />\r\n      <Button\r\n        title=\"Reset Password\"\r\n        onPress={handleResetPassword}\r\n        color=\"#3498db\"\r\n      />\r\n      {resetMessage ? <Text>{resetMessage}</Text> : null}\r\n      \r\n      \r\n      <Text> Back to Login Page? </Text>\r\n      \r\n      <TouchableOpacity>\r\n        <Text>Login Now</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\n  export default ForgotPassword;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,gBAAA;AAExC,SAASC,OAAO,EAAEC,sBAAsB,QAAQ,gBAAgB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEjE,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAC3B,IAAAC,SAAA,GAA0Bb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAwClB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EAEpC,IAAMG,mBAAmB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACtC,IAAI;QACF,IAAMC,IAAI,GAAGnB,OAAO,CAAC,CAAC;QACtB,MAAMC,sBAAsB,CAACkB,IAAI,EAAET,KAAK,CAAC;QACzCK,eAAe,CAAC,qDAAqD,CAAC;MACxE,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACE,OAAO,CAAC;QACnEP,eAAe,CAAC,uDAAuD,CAAC;MAC1E;IACF,CAAC;IAAA,gBATKC,mBAAmBA,CAAA;MAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GASxB;EAED,OACEnB,KAAA,CAACV,IAAI;IAAA8B,QAAA,GACHtB,IAAA,CAACP,IAAI;MAAA6B,QAAA,EAAE;IAAe,CAAM,CAAC,EAC7BtB,IAAA,CAACP,IAAI;MAAA6B,QAAA,EAAE;IAAC,CAAM,CAAC,EACftB,IAAA,CAACN,SAAS;MAER6B,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEjB,KAAM;MACbkB,YAAY,EAAEjB,QAAS;MACvBkB,cAAc,EAAC;IAAM,CACtB,CAAC,EACF1B,IAAA,CAACL,MAAM;MACLgC,KAAK,EAAC,gBAAgB;MACtBC,OAAO,EAAEf,mBAAoB;MAC7BgB,KAAK,EAAC;IAAS,CAChB,CAAC,EACDlB,YAAY,GAAGX,IAAA,CAACP,IAAI;MAAA6B,QAAA,EAAEX;IAAY,CAAO,CAAC,GAAG,IAAI,EAGlDX,IAAA,CAACP,IAAI;MAAA6B,QAAA,EAAC;IAAqB,CAAM,CAAC,EAElCtB,IAAA,CAACJ,gBAAgB;MAAA0B,QAAA,EACftB,IAAA,CAACP,IAAI;QAAA6B,QAAA,EAAC;MAAS,CAAM;IAAC,CACN,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAGC,eAAenB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}